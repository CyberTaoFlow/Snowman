#!/usr/bin/python
import os
import sys
import xmlrpclib
import logging
import socket
import sqlalchemy
import ConfigParser

sys.path.append("/usr/share/snowman-client/")

try:
	from util.logger import initialize
	from util.config import Config
	from data.files import ConfigGenerator
	from data.models import Session, Rule
	initialize()
except ImportError:
	print "ERROR: Could not import the logging-facilities. Is Snowman-client installed?"
	sys.exit(1)
except IOError as e:
	print "ERROR: Could not get writing-access to the logging-location."
	print "\t", e
	print "\tIs '%s' ran as the correct user? Usually only snort or root is able to write to the logging-location." % sys.argv[0]
	sys.exit(1)
except ConfigParser.Error as e:
	print "ERROR: Could not parse the configurationfile."
	print "\t", e
	sys.exit(1)
except sqlalchemy.exc.SQLAlchemyError as e:
	print "ERROR: Could not connect to the supplied database."
	print "\t", e
	sys.exit(1)

ruleLocation = Config.get("configfiles", "location")
try:
	rf = open(os.path.join(ruleLocation, "snowmanClientTest.test"), "w")
	rf.write("TEST")
	rf.close()
	os.unlink(os.path.join(ruleLocation, "snowmanClientTest.test"))
except IOError as e:
	print "ERROR: Could not create a file in '%s'." % ruleLocation
	print "\t", e
	sys.exit(1)

try:
	from data.sync import SnowmanServer
	server = SnowmanServer()
	server.connect()
except SnowmanServer.ConnectionError as e:
	print "ERROR: Could not connect to the Snowman-server"
	print "\t", e
	sys.exit(1)

if(not server.connected):
	print "ERROR: Could not connect to the Snowman-server."
	print "\tHave a look into '%s' to see error-messages." % Config.get("logging", "logfile")
	sys.exit(1)

server.disconnect()

print "OK: The snowman-client is set up and configured correctly"

