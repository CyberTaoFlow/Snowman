#!/usr/bin/python
import datetime
import os
import sys
import xmlrpclib
import logging
import socket
import subprocess

import MySQLdb

sys.path.append("/usr/share/snowman-client/")
from util.tools import doubleFork
doubleFork()

# Initialize the logger
from util.logger import initialize
initialize()

from data.models import Session, Rule, RuleSet, RuleClass
from data.sync import SnowmanServer
from util.config import Config

def main():
	start = datetime.datetime.now()
	logger = logging.getLogger(__name__)
	logger.info("Starting to syncgronize the ruleset from the snowman-server")

	server = SnowmanServer()
	
	if server.connect():
		server.synchronizeClasses()
		server.synchronizeGenerators()
		server.synchronizeRuleReferenceTypes()
		server.synchronizeRuleSets()
		server.synchronizeRules()
	
		server.disconnect()
		
		if("reloadconfig" in sys.argv):
			subprocess.call(['/usr/bin/snowmanclient-generateConfig'])
		
	else:
		logger.warning("Could not connect to snowman server.")
	
	stop = datetime.datetime.now()
	
	f = open("/tmp/snowman-client.update-time.txt", "a")
	f.write("%s\n" % str(stop - start))
	f.close()

if __name__ == "__main__":
	main()
